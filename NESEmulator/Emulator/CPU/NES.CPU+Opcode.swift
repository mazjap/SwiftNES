extension NES.CPU {
    enum OpcodeType {
        case BRK, ORA, STP
        case SLO, NOP, ASL
        case PHP, ANC, BPL
        case CLC, JSR, AND
        case RLA, BIT, ROL
        case PLP, BMI, SEC
        case RTI, EOR, SRE
        case LSR, PHA, ALR
        case JMP, BVC, CLI
        case RTS, ADC, RRA
        case ROR, PLA, ARR
        case BVS, SEI, STA
        case SAX, STY, STX
        case DEY, TXA, XAA
        case BCC, AHX, TYA
        case TXS, TAS, SHY
        case SHX, LDY, LDA
        case LDX, LAX, TAY
        case TAX, BCS, CLV
        case TSX, LAS, CPY
        case CMP, DCP, DEC
        case INY, DEX, AXS
        case BNE, CLD, CPX
        case SBC, ISC, INC
        case INX, BEQ, SED
    }
    
    enum Opcode: UInt8 {
        case BRK                  // 0x00
        case ORA_indexedIndirect  // 0x01
        case STP                  // 0x02
        case SLO_indexedIndirect  // 0x03
        case NOP_zeroPage         // 0x04
        case ORA_zeroPage         // 0x05
        case ASL_zeroPage         // 0x06
        case SLO_zeroPage         // 0x07
        case PHP                  // 0x08
        case ORA_immediate        // 0x09
        case ASL                  // 0x0A
        case ANC_immediate        // 0x0B
        case NOP_absolute         // 0x0C
        case ORA_absolute         // 0x0D
        case ASL_absolute         // 0x0E
        case SLO_absolute         // 0x0F
        case BPL_relative         // 0x10
        case ORA_indirectIndexed  // 0x11
        case STP_2                // 0x12
        case SLO_indirectIndexed  // 0x13
        case NOP_zeroPageX        // 0x14
        case ORA_zeroPageX        // 0x15
        case ASL_zeroPageX        // 0x16
        case SLO_zeroPageX        // 0x17
        case CLC                  // 0x18
        case ORA_absoluteY        // 0x19
        case NOP                  // 0x1A
        case SLO_absoluteY        // 0x1B
        case NOP_absoluteX        // 0x1C
        case ORA_absoluteX        // 0x1D
        case ASL_absoluteX        // 0x1E
        case SLO_absoluteX        // 0x1F
        case JSR_absolute         // 0x20
        case AND_indexedIndirect  // 0x21
        case STP_3                // 0x22
        case RLA_indexedIndirect  // 0x23
        case BIT_zeroPage         // 0x24
        case AND_zeroPage         // 0x25
        case ROL_zeroPage         // 0x26
        case RLA_zeroPage         // 0x27
        case PLP                  // 0x28
        case AND_immediate        // 0x29
        case ROL                  // 0x2A
        case ANC_immediate_2      // 0x2B
        case BIT_absolute         // 0x2C
        case AND_absolute         // 0x2D
        case ROL_absolute         // 0x2E
        case RLA_absolute         // 0x2F
        case BMI_relative         // 0x30
        case AND_indirectIndexed  // 0x31
        case STP_4                // 0x32
        case RLA_indirectIndexed  // 0x33
        case NOP_zeroPageX_2      // 0x34
        case AND_zeroPageX        // 0x35
        case ROL_zeroPageX        // 0x36
        case RLA_zeroPageX        // 0x37
        case SEC                  // 0x38
        case AND_absoluteY        // 0x39
        case NOP_2                // 0x3A
        case RLA_absoluteY        // 0x3B
        case NOP_absoluteX_2      // 0x3C
        case AND_absoluteX        // 0x3D
        case ROL_absoluteX        // 0x3E
        case RLA_absoluteX        // 0x3F
        case RTI                  // 0x40
        case EOR_indexedIndirect  // 0x41
        case STP_5                // 0x42
        case SRE_indexedIndirect  // 0x43
        case NOP_zeroPage_2       // 0x44
        case EOR_zeroPage         // 0x45
        case LSR_zeroPage         // 0x46
        case SRE_zeroPage         // 0x47
        case PHA                  // 0x48
        case EOR_immediate        // 0x49
        case LSR                  // 0x4A
        case ALR_immediate        // 0x4B
        case JMP_absolute         // 0x4C
        case EOR_absolute         // 0x4D
        case LSR_absolute         // 0x4E
        case SRE_absolute         // 0x4F
        case BVC_relative         // 0x50
        case EOR_indirectIndexed  // 0x51
        case STP_6                // 0x52
        case SRE_indirectIndexed  // 0x53
        case NOP_zeroPageX_3      // 0x54
        case EOR_zeroPageX        // 0x55
        case LSR_zeroPageX        // 0x56
        case SRE_zeroPageX        // 0x57
        case CLI                  // 0x58
        case EOR_absoluteY        // 0x59
        case NOP_3                // 0x5A
        case SRE_absoluteY        // 0x5B
        case NOP_absoluteX_3      // 0x5C
        case EOR_absoluteX        // 0x5D
        case LSR_absoluteX        // 0x5E
        case SRE_absoluteX        // 0x5F
        case RTS                  // 0x60
        case ADC_indexedIndirect  // 0x61
        case STP_7                // 0x62
        case RRA_indexedIndirect  // 0x63
        case NOP_zeroPage_3       // 0x64
        case ADC_zeroPage         // 0x65
        case ROR_zeroPage         // 0x66
        case RRA_zeroPage         // 0x67
        case PLA                  // 0x68
        case ADC_immediate        // 0x69
        case ROR                  // 0x6A
        case ARR_immediate        // 0x6B
        case JMP_indirect         // 0x6C
        case ADC_absolute         // 0x6D
        case ROR_absolute         // 0x6E
        case RRA_absolute         // 0x6F
        case BVS_relative         // 0x70
        case ADC_indirectIndexed  // 0x71
        case STP_8                // 0x72
        case RRA_indirectIndexed  // 0x73
        case NOP_zeroPageX_4      // 0x74
        case ADC_zeroPageX        // 0x75
        case ROR_zeroPageX        // 0x76
        case RRA_zeroPageX        // 0x77
        case SEI                  // 0x78
        case ADC_absoluteY        // 0x79
        case NOP_4                // 0x7A
        case RRA_absoluteY        // 0x7B
        case NOP_absoluteX_4      // 0x7C
        case ADC_absoluteX        // 0x7D
        case ROR_absoluteX        // 0x7E
        case RRA_absoluteX        // 0x7F
        case NOP_immediate        // 0x80
        case STA_indexedIndirect  // 0x81
        case NOP_immediate_2      // 0x82
        case SAX_indexedIndirect  // 0x83
        case STY_zeroPage         // 0x84
        case STA_zeroPage         // 0x85
        case STX_zeroPage         // 0x86
        case SAX_zeroPage         // 0x87
        case DEY                  // 0x88
        case NOP_immediate_3      // 0x89
        case TXA                  // 0x8A
        case XAA_immediate        // 0x8B
        case STY_absolute         // 0x8C
        case STA_absolute         // 0x8D
        case STX_absolute         // 0x8E
        case SAX_absolute         // 0x8F
        case BCC_relative         // 0x90
        case STA_indirectIndexed  // 0x91
        case STP_9                // 0x92
        case AHX_indirectIndexed  // 0x93
        case STY_zeroPageX        // 0x94
        case STA_zeroPageX        // 0x95
        case STX_zeroPageY        // 0x96
        case SAX_zeroPageY        // 0x97
        case TYA                  // 0x98
        case STA_absoluteY        // 0x99
        case TXS                  // 0x9A
        case TAS_absoluteY        // 0x9B
        case SHY_absoluteX        // 0x9C
        case STA_absoluteX        // 0x9D
        case SHX_absoluteY        // 0x9E
        case AHX_absoluteY        // 0x9F
        case LDY_immediate        // 0xA0
        case LDA_indexedIndirect  // 0xA1
        case LDX_immediate        // 0xA2
        case LAX_indexedIndirect  // 0xA3
        case LDY_zeroPage         // 0xA4
        case LDA_zeroPage         // 0xA5
        case LDX_zeroPage         // 0xA6
        case LAX_zeroPage         // 0xA7
        case TAY                  // 0xA8
        case LDA_immediate        // 0xA9
        case TAX                  // 0xAA
        case LAX_immediate        // 0xAB
        case LDY_absolute         // 0xAC
        case LDA_absolute         // 0xAD
        case LDX_absolute         // 0xAE
        case LAX_absolute         // 0xAF
        case BCS_relative         // 0xB0
        case LDA_indirectIndexed  // 0xB1
        case STP_10               // 0xB2
        case LAX_indirectIndexed  // 0xB3
        case LDY_zeroPageX        // 0xB4
        case LDA_zeroPageX        // 0xB5
        case LDX_zeroPageY        // 0xB6
        case LAX_zeroPageY        // 0xB7
        case CLV                  // 0xB8
        case LDA_absoluteY        // 0xB9
        case TSX                  // 0xBA
        case LAS_absoluteY        // 0xBB
        case LDY_absoluteX        // 0xBC
        case LDA_absoluteX        // 0xBD
        case LDX_absoluteY        // 0xBE
        case LAX_absoluteY        // 0xBF
        case CPY_immediate        // 0xC0
        case CMP_indexedIndirect  // 0xC1
        case NOP_immediate_4      // 0xC2
        case DCP_indexedIndirect  // 0xC3
        case CPY_zeroPage         // 0xC4
        case CMP_zeroPage         // 0xC5
        case DEC_zeroPage         // 0xC6
        case DCP_zeroPage         // 0xC7
        case INY                  // 0xC8
        case CMP_immediate        // 0xC9
        case DEX                  // 0xCA
        case AXS_immediate        // 0xCB
        case CPY_absolute         // 0xCC
        case CMP_absolute         // 0xCD
        case DEC_absolute         // 0xCE
        case DCP_absolute         // 0xCF
        case BNE_relative         // 0xD0
        case CMP_indirectIndexed  // 0xD1
        case STP_11               // 0xD2
        case DCP_indirectIndexed  // 0xD3
        case NOP_zeroPageX_5      // 0xD4
        case CMP_zeroPageX        // 0xD5
        case DEC_zeroPageX        // 0xD6
        case DCP_zeroPageX        // 0xD7
        case CLD                  // 0xD8
        case CMP_absoluteY        // 0xD9
        case NOP_5                // 0xDA
        case DCP_absoluteY        // 0xDB
        case NOP_absoluteX_5      // 0xDC
        case CMP_absoluteX        // 0xDD
        case DEC_absoluteX        // 0xDE
        case DCP_absoluteX        // 0xDF
        case CPX_immediate        // 0xE0
        case SBC_indexedIndirect  // 0xE1
        case NOP_immediate_5      // 0xE2
        case ISC_indexedIndirect  // 0xE3
        case CPX_zeroPage         // 0xE4
        case SBC_zeroPage         // 0xE5
        case INC_zeroPage         // 0xE6
        case ISC_zeroPage         // 0xE7
        case INX                  // 0xE8
        case SBC_immediate        // 0xE9
        case NOP_6                // 0xEA
        case SBC_immediate_2      // 0xEB
        case CPX_absolute         // 0xEC
        case SBC_absolute         // 0xED
        case INC_absolute         // 0xEE
        case ISC_absolute         // 0xEF
        case BEQ_relative         // 0xF0
        case SBC_indirectIndexed  // 0xF1
        case STP_12               // 0xF2
        case ISC_indirectIndexed  // 0xF3
        case NOP_zeroPageX_6      // 0xF4
        case SBC_zeroPageX        // 0xF5
        case INC_zeroPageX        // 0xF6
        case ISC_zeroPageX        // 0xF7
        case SED                  // 0xF8
        case SBC_absoluteY        // 0xF9
        case NOP_7                // 0xFA
        case ISC_absoluteY        // 0xFB
        case NOP_absoluteX_6      // 0xFC
        case SBC_absoluteX        // 0xFD
        case INC_absoluteX        // 0xFE
        case ISC_absoluteX        // 0xFF
    }
}

extension NES.CPU {
    func getOpcode() throws -> Opcode {
        let opValue = memoryManager.read(from: registers.programCounter)
        
        incrementPc()
        clockCycleCount += 1
        
        // Opcode enum covers all UInt8 values
        return Opcode(rawValue: opValue)!
    }
}
